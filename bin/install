#!/usr/bin/env bash

LOG_FILE="${LOG_FILE:-/home/nixos/install.log}"
DEVICE="${DEVICE:-/dev/nvme1n1}"
SECURE_WIPE="${SECURE_WIPE:-no}"
CLEANUP="${CLEANUP:-yes}"
CLEANUP_ONLY="${CLEANUP_ONLY:-no}"
MACHINE="${MACHINE:-andromeda}"

repodir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"

(
set -euo pipefail
IFS=$'\n\t'

set -x

function prepare-cleanup {
  echo ${@} >> /tmp/cleanup
}

function cleanup {
  if [ ! -f /tmp/cleanup ]; then
      return;
  fi
  tac /tmp/cleanup > /tmp/cleanup-reverse
  bash /tmp/cleanup-reverse
  rm /tmp/cleanup /tmp/cleanup-reverse
}

if [ ${CLEANUP} = "yes" ] || [ ${CLEANUP} = "y" ]; then
  trap cleanup EXIT

  if [ ${CLEANUP_ONLY} = "yes" ] || [ ${CLEANUP_ONLY} = "y" ]; then
    exit 0
  fi
fi

if [ ${SECURE_WIPE} = "yes" ] || [ ${SECURE_WIPE} = "y" ]; then
    cryptsetup open --type plain "${DEVICE}" container --key-file /dev/urandom
    dd if=/dev/zero of=/dev/mapper/container status=progress bs=1M || true
    cryptsetup close container
fi

RAM_SIZE="$(free --mega | awk 'FNR==2{print $2}')"
SWAP_END="$(("${RAM_SIZE}" + 1000))MiB"

# sgdisk --list-types
#sgdisk -Z "${DEVICE}"
#sgdisk -n 0:0:+1GiB -t 0:ef00 -c 0:boot "${DEVICE}"
#sgdisk -n 0:0:+"${RAM_SIZE}"MiB -t 0:8200 -c 0:swap "${DEVICE}"
#sgdisk -n 0:0:0 -t 0:8300 -c 0:system "${DEVICE}"
#sgdisk -p "${DEVICE}"
parted "${DEVICE}" -- mklabel gpt
parted "${DEVICE}" -- mkpart ESP fat32 1MiB 512MiB
parted "${DEVICE}" -- set 1 esp on
#parted "${DEVICE}" -- mkpart primary 1000MiB "${SWAP_END}"
#parted "${DEVICE}" -- mkpart primary "${SWAP_END}" 100%
parted "${DEVICE}" -- mkpart primary 512MiB 100%

#dd bs=512 count=4 if=/dev/urandom of="/keyfile" iflag=fullblock
#chmod 000 /keyfile

BOOT_DEVICE=${DEVICE}p1
#SWAP_DEVICE=${DEVICE}p2
#SYSTEM_DEVICE=${DEVICE}p3
SYSTEM_DEVICE=${DEVICE}p2

#cryptsetup -yq --cipher aes-xts-plain64 \
#           --key-size 512 \
#           --hash sha512 \
#           --iter-time 2000 \
#           --use-urandom \
#           luksFormat \
#           "${BOOT_DEVICE}" \
#           /keyfile

#cryptsetup -yq --cipher aes-xts-plain64 \
#           --key-size 512 \
#           --hash sha512 \
#           --iter-time 2000 \
#           --use-urandom \
#           luksFormat \
#           "${SWAP_DEVICE}" \
#           /keyfile

cryptsetup -yq --cipher aes-xts-plain64 \
           --key-size 512 \
           --hash sha512 \
           --iter-time 2000 \
           --use-urandom \
           --label luks_system \
           luksFormat \
           "${SYSTEM_DEVICE}"

#cryptsetup luksAddKey "${BOOT_DEVICE}" --key-file /keyfile
#cryptsetup luksAddKey "${SWAP_DEVICE}" --key-file /keyfile
#cryptsetup luksAddKey "${SYSTEM_DEVICE}" --key-file /keyfile

#cryptsetup --allow-discards open --type luks "${BOOT_DEVICE}" boot \
#           --key-file /keyfile
#prepare-cleanup cryptsetup close boot

#cryptsetup --allow-discards open --type luks "${SWAP_DEVICE}" swap \
#           --key-file /keyfile
#prepare-cleanup cryptsetup close swap

cryptsetup --allow-discards open --type luks "${SYSTEM_DEVICE}" system
prepare-cleanup cryptsetup close system

#mkfs.fat -F 32 -n boot /dev/mapper/boot
mkfs.fat -F 32 -n boot "${BOOT_DEVICE}"

#mkswap -f -L swap /dev/mapper/swap
#swapon -p 0 -L swap
#prepare-cleanup swapoff -L swap

mkfs.btrfs --force --label system /dev/mapper/system

mount -t btrfs LABEL=system /mnt

btrfs subvolume create /mnt/snapshots
btrfs subvolume create /mnt/root
btrfs subvolume create /mnt/home
btrfs subvolume create /mnt/var
btrfs subvolume create /mnt/nix

umount -R /mnt

mount -t btrfs -o subvol=root,defaults,x-mount.mkdir,compress=lzo,ssd,noatime \
      LABEL=system /mnt
prepare-cleanup umount /mnt

mount -t btrfs -o subvol=home,defaults,x-mount.mkdir,compress=lzo,ssd,noatime,nodev,nosuid \
      LABEL=system /mnt/home
prepare-cleanup umount /mnt/home

mount -t btrfs -o subvol=var,defaults,x-mount.mkdir,compress=lzo,ssd,noatime,nodev,nosuid,noexec \
      LABEL=system /mnt/var
prepare-cleanup umount /mnt/var

mount -t btrfs -o subvol=nix,defaults,x-mount.mkdir,compress=lzo,ssd,noatime,nodev,rw \
      LABEL=system /mnt/nix
prepare-cleanup umount /mnt/nix

mount -t btrfs -o subvol=snapshots,defaults,x-mount.mkdir,compress=lzo,ssd,noatime \
      LABEL=system /mnt/.snapshots
prepare-cleanup umount /mnt/.snapshots

mount -t vfat -o defaults,x-mount.mkdir LABEL=boot /mnt/boot

prepare-cleanup umount /mnt/boot

#ls /keyfile | cpio --create --format=newc --owner=+0:+0 --reproducible | gzip -9 > /mnt/boot/initrd.key.gz
#chmod 000 /mnt/boot/initrd.key.gz

nixos-generate-config --root /mnt

mv /mnt/etc/nixos/hardware-configuration.nix /mnt/etc/nixos/hardware-configuration.nix.old
mv /mnt/etc/nixos/configuration.nix /mnt/etc/nixos/configuration.nix.old
ln -s "${repodir}"/../machines/"${MACHINE}".nix /mnt/etc/nixos/configuration.nix

nixos-install

nix-channel --add https://nixos.org/channels/nixos-unstable nixos

) |& tee "${LOG_FILE}"

